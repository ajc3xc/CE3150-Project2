
CE3150-Project2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000003ce  00000462  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  00800108  00800108  0000046a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000046a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000049c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000004dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e65  00000000  00000000  00000564  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bb9  00000000  00000000  000013c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006a6  00000000  00000000  00001f82  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000012c  00000000  00000000  00002628  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000061f  00000000  00000000  00002754  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000020f  00000000  00000000  00002d73  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00002f82  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
   4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
   8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
   c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  10:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  14:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  18:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  1c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  20:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  24:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  28:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  2c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  30:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  34:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  38:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  3c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__vector_15>
  40:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  44:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  48:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  4c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  50:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  54:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  58:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  5c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  60:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  64:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  68:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  6c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  70:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  74:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  78:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  7c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  80:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  84:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  88:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  8c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  90:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  94:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  98:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  9c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  a0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  a4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  a8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  ac:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  b0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  b4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  b8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  bc:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  c0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  c4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  c8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d8 e0       	ldi	r29, 0x08	; 8
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
  d8:	11 e0       	ldi	r17, 0x01	; 1
  da:	a0 e0       	ldi	r26, 0x00	; 0
  dc:	b1 e0       	ldi	r27, 0x01	; 1
  de:	ee ec       	ldi	r30, 0xCE	; 206
  e0:	f3 e0       	ldi	r31, 0x03	; 3
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x10>
  e4:	05 90       	lpm	r0, Z+
  e6:	0d 92       	st	X+, r0
  e8:	a8 30       	cpi	r26, 0x08	; 8
  ea:	b1 07       	cpc	r27, r17
  ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0xc>

000000ee <__do_clear_bss>:
  ee:	21 e0       	ldi	r18, 0x01	; 1
  f0:	a8 e0       	ldi	r26, 0x08	; 8
  f2:	b1 e0       	ldi	r27, 0x01	; 1
  f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
  f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
  f8:	a2 32       	cpi	r26, 0x22	; 34
  fa:	b2 07       	cpc	r27, r18
  fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
  fe:	0e 94 0c 01 	call	0x218	; 0x218 <main>
 102:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <_exit>

00000106 <__bad_interrupt>:
 106:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010a <time>:
 10a:	fc 01       	movw	r30, r24
 10c:	0f b6       	in	r0, 0x3f	; 63
 10e:	f8 94       	cli
 110:	60 91 1e 01 	lds	r22, 0x011E	; 0x80011e <__system_time>
 114:	70 91 1f 01 	lds	r23, 0x011F	; 0x80011f <__system_time+0x1>
 118:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__system_time+0x2>
 11c:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__system_time+0x3>
 120:	0f be       	out	0x3f, r0	; 63
 122:	30 97       	sbiw	r30, 0x00	; 0
 124:	21 f0       	breq	.+8      	; 0x12e <time+0x24>
 126:	60 83       	st	Z, r22
 128:	71 83       	std	Z+1, r23	; 0x01
 12a:	82 83       	std	Z+2, r24	; 0x02
 12c:	93 83       	std	Z+3, r25	; 0x03
 12e:	08 95       	ret

00000130 <generate_simon_pattern>:
		light_simon_led(SEQUENCE[i]);
		play_speaker(4);
		light_simon_led(0);
		half_second_delay();
	}
}
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	0e 94 85 00 	call	0x10a	; 0x10a <time>
 13c:	cb 01       	movw	r24, r22
 13e:	0e 94 77 01 	call	0x2ee	; 0x2ee <srand>
 142:	c0 e0       	ldi	r28, 0x00	; 0
 144:	d0 e0       	ldi	r29, 0x00	; 0
 146:	13 c0       	rjmp	.+38     	; 0x16e <generate_simon_pattern+0x3e>
 148:	0e 94 72 01 	call	0x2e4	; 0x2e4 <rand>
 14c:	83 70       	andi	r24, 0x03	; 3
 14e:	90 78       	andi	r25, 0x80	; 128
 150:	99 23       	and	r25, r25
 152:	24 f4       	brge	.+8      	; 0x15c <generate_simon_pattern+0x2c>
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	8c 6f       	ori	r24, 0xFC	; 252
 158:	9f 6f       	ori	r25, 0xFF	; 255
 15a:	01 96       	adiw	r24, 0x01	; 1
 15c:	01 96       	adiw	r24, 0x01	; 1
 15e:	fe 01       	movw	r30, r28
 160:	ee 0f       	add	r30, r30
 162:	ff 1f       	adc	r31, r31
 164:	e8 5f       	subi	r30, 0xF8	; 248
 166:	fe 4f       	sbci	r31, 0xFE	; 254
 168:	91 83       	std	Z+1, r25	; 0x01
 16a:	80 83       	st	Z, r24
 16c:	21 96       	adiw	r28, 0x01	; 1
 16e:	c8 30       	cpi	r28, 0x08	; 8
 170:	d1 05       	cpc	r29, r1
 172:	54 f3       	brlt	.-44     	; 0x148 <generate_simon_pattern+0x18>
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	08 95       	ret

0000017a <initialize_ports>:
 17a:	11 b8       	out	0x01, r1	; 1
 17c:	8f ef       	ldi	r24, 0xFF	; 255
 17e:	8a b9       	out	0x0a, r24	; 10
 180:	90 e3       	ldi	r25, 0x30	; 48
 182:	9d b9       	out	0x0d, r25	; 13
 184:	92 b1       	in	r25, 0x02	; 2
 186:	82 b9       	out	0x02, r24	; 2
 188:	9b b1       	in	r25, 0x0b	; 11
 18a:	8b b9       	out	0x0b, r24	; 11
 18c:	8e b1       	in	r24, 0x0e	; 14
 18e:	80 63       	ori	r24, 0x30	; 48
 190:	8e b9       	out	0x0e, r24	; 14
 192:	08 95       	ret

00000194 <__vector_15>:
 194:	1f 92       	push	r1
 196:	0f 92       	push	r0
 198:	0f b6       	in	r0, 0x3f	; 63
 19a:	0f 92       	push	r0
 19c:	11 24       	eor	r1, r1
 19e:	8f 93       	push	r24
 1a0:	9f 93       	push	r25
 1a2:	ef 93       	push	r30
 1a4:	ff 93       	push	r31
 1a6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <timer_counter>
 1aa:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <timer_counter+0x1>
 1ae:	01 96       	adiw	r24, 0x01	; 1
 1b0:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <timer_counter+0x1>
 1b4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <timer_counter>
 1b8:	18 16       	cp	r1, r24
 1ba:	19 06       	cpc	r1, r25
 1bc:	44 f4       	brge	.+16     	; 0x1ce <__vector_15+0x3a>
 1be:	ef e6       	ldi	r30, 0x6F	; 111
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	80 81       	ld	r24, Z
 1c4:	8e 7f       	andi	r24, 0xFE	; 254
 1c6:	80 83       	st	Z, r24
 1c8:	8b b1       	in	r24, 0x0b	; 11
 1ca:	8f 7e       	andi	r24, 0xEF	; 239
 1cc:	8b b9       	out	0x0b, r24	; 11
 1ce:	85 e8       	ldi	r24, 0x85	; 133
 1d0:	9e e1       	ldi	r25, 0x1E	; 30
 1d2:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 1d6:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 1da:	ff 91       	pop	r31
 1dc:	ef 91       	pop	r30
 1de:	9f 91       	pop	r25
 1e0:	8f 91       	pop	r24
 1e2:	0f 90       	pop	r0
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	0f 90       	pop	r0
 1e8:	1f 90       	pop	r1
 1ea:	18 95       	reti

000001ec <half_second_delay>:
 1ec:	16 bc       	out	0x26, r1	; 38
 1ee:	14 bc       	out	0x24, r1	; 36
 1f0:	85 b5       	in	r24, 0x25	; 37
 1f2:	85 60       	ori	r24, 0x05	; 5
 1f4:	85 bd       	out	0x25, r24	; 37
 1f6:	80 e0       	ldi	r24, 0x00	; 0
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	06 c0       	rjmp	.+12     	; 0x208 <half_second_delay+0x1c>
 1fc:	a8 9b       	sbis	0x15, 0	; 21
 1fe:	fe cf       	rjmp	.-4      	; 0x1fc <half_second_delay+0x10>
 200:	16 bc       	out	0x26, r1	; 38
 202:	21 e0       	ldi	r18, 0x01	; 1
 204:	25 bb       	out	0x15, r18	; 21
 206:	01 96       	adiw	r24, 0x01	; 1
 208:	8f 30       	cpi	r24, 0x0F	; 15
 20a:	91 05       	cpc	r25, r1
 20c:	bc f3       	brlt	.-18     	; 0x1fc <half_second_delay+0x10>
 20e:	14 bc       	out	0x24, r1	; 36
 210:	15 bc       	out	0x25, r1	; 37
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	85 bb       	out	0x15, r24	; 21
 216:	08 95       	ret

00000218 <main>:

int main(void)
{
	initialize_ports();
 218:	0e 94 bd 00 	call	0x17a	; 0x17a <initialize_ports>
	generate_simon_pattern();
 21c:	0e 94 98 00 	call	0x130	; 0x130 <generate_simon_pattern>
	
	LVL = MAX_LEVEL;
 220:	88 e0       	ldi	r24, 0x08	; 8
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LVL+0x1>
 228:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LVL>
	//play_sequence();
	
	while(1)
	{
		//int value = (1<<PINE6);
		if (!(PINE & (1 << PINE6))) PORTE &= ~(1<<PORTE5);
 22c:	66 99       	sbic	0x0c, 6	; 12
 22e:	04 c0       	rjmp	.+8      	; 0x238 <main+0x20>
 230:	8e b1       	in	r24, 0x0e	; 14
 232:	8f 7d       	andi	r24, 0xDF	; 223
 234:	8e b9       	out	0x0e, r24	; 14
 236:	05 c0       	rjmp	.+10     	; 0x242 <main+0x2a>
		else if (PINE & (1 << PINE6)) PORTE |= (1<<PORTE5);
 238:	66 9b       	sbis	0x0c, 6	; 12
 23a:	03 c0       	rjmp	.+6      	; 0x242 <main+0x2a>
 23c:	8e b1       	in	r24, 0x0e	; 14
 23e:	80 62       	ori	r24, 0x20	; 32
 240:	8e b9       	out	0x0e, r24	; 14
		//if (PINA7 == 1)	PORTD &= ~(1<<PORTD7);
		PORTD = PINA;
 242:	80 b1       	in	r24, 0x00	; 0
 244:	8b b9       	out	0x0b, r24	; 11
		half_second_delay();
 246:	0e 94 f6 00 	call	0x1ec	; 0x1ec <half_second_delay>
	}
 24a:	f0 cf       	rjmp	.-32     	; 0x22c <main+0x14>

0000024c <do_rand>:
 24c:	8f 92       	push	r8
 24e:	9f 92       	push	r9
 250:	af 92       	push	r10
 252:	bf 92       	push	r11
 254:	cf 92       	push	r12
 256:	df 92       	push	r13
 258:	ef 92       	push	r14
 25a:	ff 92       	push	r15
 25c:	cf 93       	push	r28
 25e:	df 93       	push	r29
 260:	ec 01       	movw	r28, r24
 262:	68 81       	ld	r22, Y
 264:	79 81       	ldd	r23, Y+1	; 0x01
 266:	8a 81       	ldd	r24, Y+2	; 0x02
 268:	9b 81       	ldd	r25, Y+3	; 0x03
 26a:	61 15       	cp	r22, r1
 26c:	71 05       	cpc	r23, r1
 26e:	81 05       	cpc	r24, r1
 270:	91 05       	cpc	r25, r1
 272:	21 f4       	brne	.+8      	; 0x27c <do_rand+0x30>
 274:	64 e2       	ldi	r22, 0x24	; 36
 276:	79 ed       	ldi	r23, 0xD9	; 217
 278:	8b e5       	ldi	r24, 0x5B	; 91
 27a:	97 e0       	ldi	r25, 0x07	; 7
 27c:	2d e1       	ldi	r18, 0x1D	; 29
 27e:	33 ef       	ldi	r19, 0xF3	; 243
 280:	41 e0       	ldi	r20, 0x01	; 1
 282:	50 e0       	ldi	r21, 0x00	; 0
 284:	0e 94 82 01 	call	0x304	; 0x304 <__divmodsi4>
 288:	49 01       	movw	r8, r18
 28a:	5a 01       	movw	r10, r20
 28c:	9b 01       	movw	r18, r22
 28e:	ac 01       	movw	r20, r24
 290:	a7 ea       	ldi	r26, 0xA7	; 167
 292:	b1 e4       	ldi	r27, 0x41	; 65
 294:	0e 94 a1 01 	call	0x342	; 0x342 <__muluhisi3>
 298:	6b 01       	movw	r12, r22
 29a:	7c 01       	movw	r14, r24
 29c:	ac ee       	ldi	r26, 0xEC	; 236
 29e:	b4 ef       	ldi	r27, 0xF4	; 244
 2a0:	a5 01       	movw	r20, r10
 2a2:	94 01       	movw	r18, r8
 2a4:	0e 94 af 01 	call	0x35e	; 0x35e <__mulohisi3>
 2a8:	dc 01       	movw	r26, r24
 2aa:	cb 01       	movw	r24, r22
 2ac:	8c 0d       	add	r24, r12
 2ae:	9d 1d       	adc	r25, r13
 2b0:	ae 1d       	adc	r26, r14
 2b2:	bf 1d       	adc	r27, r15
 2b4:	b7 ff       	sbrs	r27, 7
 2b6:	03 c0       	rjmp	.+6      	; 0x2be <do_rand+0x72>
 2b8:	01 97       	sbiw	r24, 0x01	; 1
 2ba:	a1 09       	sbc	r26, r1
 2bc:	b0 48       	sbci	r27, 0x80	; 128
 2be:	88 83       	st	Y, r24
 2c0:	99 83       	std	Y+1, r25	; 0x01
 2c2:	aa 83       	std	Y+2, r26	; 0x02
 2c4:	bb 83       	std	Y+3, r27	; 0x03
 2c6:	9f 77       	andi	r25, 0x7F	; 127
 2c8:	df 91       	pop	r29
 2ca:	cf 91       	pop	r28
 2cc:	ff 90       	pop	r15
 2ce:	ef 90       	pop	r14
 2d0:	df 90       	pop	r13
 2d2:	cf 90       	pop	r12
 2d4:	bf 90       	pop	r11
 2d6:	af 90       	pop	r10
 2d8:	9f 90       	pop	r9
 2da:	8f 90       	pop	r8
 2dc:	08 95       	ret

000002de <rand_r>:
 2de:	0e 94 26 01 	call	0x24c	; 0x24c <do_rand>
 2e2:	08 95       	ret

000002e4 <rand>:
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	91 e0       	ldi	r25, 0x01	; 1
 2e8:	0e 94 26 01 	call	0x24c	; 0x24c <do_rand>
 2ec:	08 95       	ret

000002ee <srand>:
 2ee:	a0 e0       	ldi	r26, 0x00	; 0
 2f0:	b0 e0       	ldi	r27, 0x00	; 0
 2f2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 2f6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2fa:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 2fe:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 302:	08 95       	ret

00000304 <__divmodsi4>:
 304:	05 2e       	mov	r0, r21
 306:	97 fb       	bst	r25, 7
 308:	1e f4       	brtc	.+6      	; 0x310 <__divmodsi4+0xc>
 30a:	00 94       	com	r0
 30c:	0e 94 99 01 	call	0x332	; 0x332 <__negsi2>
 310:	57 fd       	sbrc	r21, 7
 312:	07 d0       	rcall	.+14     	; 0x322 <__divmodsi4_neg2>
 314:	0e 94 b4 01 	call	0x368	; 0x368 <__udivmodsi4>
 318:	07 fc       	sbrc	r0, 7
 31a:	03 d0       	rcall	.+6      	; 0x322 <__divmodsi4_neg2>
 31c:	4e f4       	brtc	.+18     	; 0x330 <__divmodsi4_exit>
 31e:	0c 94 99 01 	jmp	0x332	; 0x332 <__negsi2>

00000322 <__divmodsi4_neg2>:
 322:	50 95       	com	r21
 324:	40 95       	com	r20
 326:	30 95       	com	r19
 328:	21 95       	neg	r18
 32a:	3f 4f       	sbci	r19, 0xFF	; 255
 32c:	4f 4f       	sbci	r20, 0xFF	; 255
 32e:	5f 4f       	sbci	r21, 0xFF	; 255

00000330 <__divmodsi4_exit>:
 330:	08 95       	ret

00000332 <__negsi2>:
 332:	90 95       	com	r25
 334:	80 95       	com	r24
 336:	70 95       	com	r23
 338:	61 95       	neg	r22
 33a:	7f 4f       	sbci	r23, 0xFF	; 255
 33c:	8f 4f       	sbci	r24, 0xFF	; 255
 33e:	9f 4f       	sbci	r25, 0xFF	; 255
 340:	08 95       	ret

00000342 <__muluhisi3>:
 342:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__umulhisi3>
 346:	a5 9f       	mul	r26, r21
 348:	90 0d       	add	r25, r0
 34a:	b4 9f       	mul	r27, r20
 34c:	90 0d       	add	r25, r0
 34e:	a4 9f       	mul	r26, r20
 350:	80 0d       	add	r24, r0
 352:	91 1d       	adc	r25, r1
 354:	11 24       	eor	r1, r1
 356:	08 95       	ret

00000358 <__mulshisi3>:
 358:	b7 ff       	sbrs	r27, 7
 35a:	0c 94 a1 01 	jmp	0x342	; 0x342 <__muluhisi3>

0000035e <__mulohisi3>:
 35e:	0e 94 a1 01 	call	0x342	; 0x342 <__muluhisi3>
 362:	82 1b       	sub	r24, r18
 364:	93 0b       	sbc	r25, r19
 366:	08 95       	ret

00000368 <__udivmodsi4>:
 368:	a1 e2       	ldi	r26, 0x21	; 33
 36a:	1a 2e       	mov	r1, r26
 36c:	aa 1b       	sub	r26, r26
 36e:	bb 1b       	sub	r27, r27
 370:	fd 01       	movw	r30, r26
 372:	0d c0       	rjmp	.+26     	; 0x38e <__udivmodsi4_ep>

00000374 <__udivmodsi4_loop>:
 374:	aa 1f       	adc	r26, r26
 376:	bb 1f       	adc	r27, r27
 378:	ee 1f       	adc	r30, r30
 37a:	ff 1f       	adc	r31, r31
 37c:	a2 17       	cp	r26, r18
 37e:	b3 07       	cpc	r27, r19
 380:	e4 07       	cpc	r30, r20
 382:	f5 07       	cpc	r31, r21
 384:	20 f0       	brcs	.+8      	; 0x38e <__udivmodsi4_ep>
 386:	a2 1b       	sub	r26, r18
 388:	b3 0b       	sbc	r27, r19
 38a:	e4 0b       	sbc	r30, r20
 38c:	f5 0b       	sbc	r31, r21

0000038e <__udivmodsi4_ep>:
 38e:	66 1f       	adc	r22, r22
 390:	77 1f       	adc	r23, r23
 392:	88 1f       	adc	r24, r24
 394:	99 1f       	adc	r25, r25
 396:	1a 94       	dec	r1
 398:	69 f7       	brne	.-38     	; 0x374 <__udivmodsi4_loop>
 39a:	60 95       	com	r22
 39c:	70 95       	com	r23
 39e:	80 95       	com	r24
 3a0:	90 95       	com	r25
 3a2:	9b 01       	movw	r18, r22
 3a4:	ac 01       	movw	r20, r24
 3a6:	bd 01       	movw	r22, r26
 3a8:	cf 01       	movw	r24, r30
 3aa:	08 95       	ret

000003ac <__umulhisi3>:
 3ac:	a2 9f       	mul	r26, r18
 3ae:	b0 01       	movw	r22, r0
 3b0:	b3 9f       	mul	r27, r19
 3b2:	c0 01       	movw	r24, r0
 3b4:	a3 9f       	mul	r26, r19
 3b6:	70 0d       	add	r23, r0
 3b8:	81 1d       	adc	r24, r1
 3ba:	11 24       	eor	r1, r1
 3bc:	91 1d       	adc	r25, r1
 3be:	b2 9f       	mul	r27, r18
 3c0:	70 0d       	add	r23, r0
 3c2:	81 1d       	adc	r24, r1
 3c4:	11 24       	eor	r1, r1
 3c6:	91 1d       	adc	r25, r1
 3c8:	08 95       	ret

000003ca <_exit>:
 3ca:	f8 94       	cli

000003cc <__stop_program>:
 3cc:	ff cf       	rjmp	.-2      	; 0x3cc <__stop_program>
