
CE3150-Project2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000003d2  00000466  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003d2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  00800108  00800108  0000046e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000046e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  000004e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d75  00000000  00000000  00000558  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b50  00000000  00000000  000012cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000058e  00000000  00000000  00001e1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  000023ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e3  00000000  00000000  000024ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000014a  00000000  00000000  00002a8f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00002bd9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
   4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
   8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
   c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  10:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  14:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  18:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  1c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  20:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  24:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  28:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  2c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  30:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  34:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  38:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  3c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__vector_15>
  40:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  44:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  48:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  4c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  50:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  54:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  58:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  5c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  60:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  64:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  68:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  6c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  70:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  74:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  78:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  7c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  80:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  84:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  88:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  8c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  90:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  94:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  98:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  9c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  a0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  a4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  a8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  ac:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  b0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  b4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  b8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  bc:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  c0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  c4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  c8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d8 e0       	ldi	r29, 0x08	; 8
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
  d8:	11 e0       	ldi	r17, 0x01	; 1
  da:	a0 e0       	ldi	r26, 0x00	; 0
  dc:	b1 e0       	ldi	r27, 0x01	; 1
  de:	e2 ed       	ldi	r30, 0xD2	; 210
  e0:	f3 e0       	ldi	r31, 0x03	; 3
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x10>
  e4:	05 90       	lpm	r0, Z+
  e6:	0d 92       	st	X+, r0
  e8:	a8 30       	cpi	r26, 0x08	; 8
  ea:	b1 07       	cpc	r27, r17
  ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0xc>

000000ee <__do_clear_bss>:
  ee:	21 e0       	ldi	r18, 0x01	; 1
  f0:	a8 e0       	ldi	r26, 0x08	; 8
  f2:	b1 e0       	ldi	r27, 0x01	; 1
  f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
  f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
  f8:	a2 32       	cpi	r26, 0x22	; 34
  fa:	b2 07       	cpc	r27, r18
  fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
  fe:	0e 94 23 01 	call	0x246	; 0x246 <main>
 102:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <_exit>

00000106 <__bad_interrupt>:
 106:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010a <time>:
 10a:	fc 01       	movw	r30, r24
 10c:	0f b6       	in	r0, 0x3f	; 63
 10e:	f8 94       	cli
 110:	60 91 1e 01 	lds	r22, 0x011E	; 0x80011e <__system_time>
 114:	70 91 1f 01 	lds	r23, 0x011F	; 0x80011f <__system_time+0x1>
 118:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__system_time+0x2>
 11c:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__system_time+0x3>
 120:	0f be       	out	0x3f, r0	; 63
 122:	30 97       	sbiw	r30, 0x00	; 0
 124:	21 f0       	breq	.+8      	; 0x12e <time+0x24>
 126:	60 83       	st	Z, r22
 128:	71 83       	std	Z+1, r23	; 0x01
 12a:	82 83       	std	Z+2, r24	; 0x02
 12c:	93 83       	std	Z+3, r25	; 0x03
 12e:	08 95       	ret

00000130 <generate_simon_pattern>:
	
	//reset to level 1
	LVL = 1;
	
	//regenerate pattern for simon board
	generate_simon_pattern();
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	0e 94 85 00 	call	0x10a	; 0x10a <time>
 13c:	cb 01       	movw	r24, r22
 13e:	0e 94 79 01 	call	0x2f2	; 0x2f2 <srand>
 142:	c0 e0       	ldi	r28, 0x00	; 0
 144:	d0 e0       	ldi	r29, 0x00	; 0
 146:	13 c0       	rjmp	.+38     	; 0x16e <generate_simon_pattern+0x3e>
 148:	0e 94 74 01 	call	0x2e8	; 0x2e8 <rand>
 14c:	83 70       	andi	r24, 0x03	; 3
 14e:	90 78       	andi	r25, 0x80	; 128
 150:	99 23       	and	r25, r25
 152:	24 f4       	brge	.+8      	; 0x15c <generate_simon_pattern+0x2c>
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	8c 6f       	ori	r24, 0xFC	; 252
 158:	9f 6f       	ori	r25, 0xFF	; 255
 15a:	01 96       	adiw	r24, 0x01	; 1
 15c:	01 96       	adiw	r24, 0x01	; 1
 15e:	fe 01       	movw	r30, r28
 160:	ee 0f       	add	r30, r30
 162:	ff 1f       	adc	r31, r31
 164:	e8 5f       	subi	r30, 0xF8	; 248
 166:	fe 4f       	sbci	r31, 0xFE	; 254
 168:	91 83       	std	Z+1, r25	; 0x01
 16a:	80 83       	st	Z, r24
 16c:	21 96       	adiw	r28, 0x01	; 1
 16e:	c8 30       	cpi	r28, 0x08	; 8
 170:	d1 05       	cpc	r29, r1
 172:	54 f3       	brlt	.-44     	; 0x148 <generate_simon_pattern+0x18>
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	08 95       	ret

0000017a <initialize_ports>:
 17a:	8f ef       	ldi	r24, 0xFF	; 255
 17c:	8a b9       	out	0x0a, r24	; 10
 17e:	90 e3       	ldi	r25, 0x30	; 48
 180:	9d b9       	out	0x0d, r25	; 13
 182:	9b b1       	in	r25, 0x0b	; 11
 184:	8b b9       	out	0x0b, r24	; 11
 186:	8e b1       	in	r24, 0x0e	; 14
 188:	80 63       	ori	r24, 0x30	; 48
 18a:	8e b9       	out	0x0e, r24	; 14
 18c:	08 95       	ret

0000018e <__vector_15>:
 18e:	1f 92       	push	r1
 190:	0f 92       	push	r0
 192:	0f b6       	in	r0, 0x3f	; 63
 194:	0f 92       	push	r0
 196:	11 24       	eor	r1, r1
 198:	8f 93       	push	r24
 19a:	9f 93       	push	r25
 19c:	ef 93       	push	r30
 19e:	ff 93       	push	r31
 1a0:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <timer_counter>
 1a4:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <timer_counter+0x1>
 1a8:	01 96       	adiw	r24, 0x01	; 1
 1aa:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <timer_counter+0x1>
 1ae:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <timer_counter>
 1b2:	18 16       	cp	r1, r24
 1b4:	19 06       	cpc	r1, r25
 1b6:	44 f4       	brge	.+16     	; 0x1c8 <__vector_15+0x3a>
 1b8:	ef e6       	ldi	r30, 0x6F	; 111
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	80 81       	ld	r24, Z
 1be:	8e 7f       	andi	r24, 0xFE	; 254
 1c0:	80 83       	st	Z, r24
 1c2:	8b b1       	in	r24, 0x0b	; 11
 1c4:	8f 7e       	andi	r24, 0xEF	; 239
 1c6:	8b b9       	out	0x0b, r24	; 11
 1c8:	85 e8       	ldi	r24, 0x85	; 133
 1ca:	9e e1       	ldi	r25, 0x1E	; 30
 1cc:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 1d0:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 1d4:	ff 91       	pop	r31
 1d6:	ef 91       	pop	r30
 1d8:	9f 91       	pop	r25
 1da:	8f 91       	pop	r24
 1dc:	0f 90       	pop	r0
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	0f 90       	pop	r0
 1e2:	1f 90       	pop	r1
 1e4:	18 95       	reti

000001e6 <half_second_delay>:
 1e6:	16 bc       	out	0x26, r1	; 38
 1e8:	14 bc       	out	0x24, r1	; 36
 1ea:	85 b5       	in	r24, 0x25	; 37
 1ec:	85 60       	ori	r24, 0x05	; 5
 1ee:	85 bd       	out	0x25, r24	; 37
 1f0:	80 e0       	ldi	r24, 0x00	; 0
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	06 c0       	rjmp	.+12     	; 0x202 <half_second_delay+0x1c>
 1f6:	a8 9b       	sbis	0x15, 0	; 21
 1f8:	fe cf       	rjmp	.-4      	; 0x1f6 <half_second_delay+0x10>
 1fa:	16 bc       	out	0x26, r1	; 38
 1fc:	21 e0       	ldi	r18, 0x01	; 1
 1fe:	25 bb       	out	0x15, r18	; 21
 200:	01 96       	adiw	r24, 0x01	; 1
 202:	8f 30       	cpi	r24, 0x0F	; 15
 204:	91 05       	cpc	r25, r1
 206:	bc f3       	brlt	.-18     	; 0x1f6 <half_second_delay+0x10>
 208:	14 bc       	out	0x24, r1	; 36
 20a:	15 bc       	out	0x25, r1	; 37
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	85 bb       	out	0x15, r24	; 21
 210:	08 95       	ret

00000212 <turn_off_leds>:
 212:	8f ef       	ldi	r24, 0xFF	; 255
 214:	8b b9       	out	0x0b, r24	; 11
 216:	8e b1       	in	r24, 0x0e	; 14
 218:	80 62       	ori	r24, 0x20	; 32
 21a:	8e b9       	out	0x0e, r24	; 14
 21c:	08 95       	ret

0000021e <win_game>:

//call function if the game was won
void win_game()
{
	//turn off LEDs
	turn_off_leds();
 21e:	0e 94 09 01 	call	0x212	; 0x212 <turn_off_leds>
	
	//turn on all LEDs
	PORTD = 0x00;
 222:	1b b8       	out	0x0b, r1	; 11
	PORTE = ~(1<<PORTE5);
 224:	8f ed       	ldi	r24, 0xDF	; 223
 226:	8e b9       	out	0x0e, r24	; 14
	half_second_delay();
 228:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <half_second_delay>
	half_second_delay();
 22c:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <half_second_delay>
	
	//turn off LEDs
	turn_off_leds();
 230:	0e 94 09 01 	call	0x212	; 0x212 <turn_off_leds>
	
	//reset to level 1
	LVL = 1;
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LVL+0x1>
 23c:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LVL>
	
	//regenerate pattern for simon board
	generate_simon_pattern();
 240:	0e 94 98 00 	call	0x130	; 0x130 <generate_simon_pattern>
 244:	08 95       	ret

00000246 <main>:
	return;
}

int main(void)
{
	initialize_ports();
 246:	0e 94 bd 00 	call	0x17a	; 0x17a <initialize_ports>
	win_game();
 24a:	0e 94 0f 01 	call	0x21e	; 0x21e <win_game>
	}
	LCD_clean();
	LCD_string_datashow("WOW IMPOSSIBLE!");
	while(1);
	*/
 24e:	08 95       	ret

00000250 <do_rand>:
 250:	8f 92       	push	r8
 252:	9f 92       	push	r9
 254:	af 92       	push	r10
 256:	bf 92       	push	r11
 258:	cf 92       	push	r12
 25a:	df 92       	push	r13
 25c:	ef 92       	push	r14
 25e:	ff 92       	push	r15
 260:	cf 93       	push	r28
 262:	df 93       	push	r29
 264:	ec 01       	movw	r28, r24
 266:	68 81       	ld	r22, Y
 268:	79 81       	ldd	r23, Y+1	; 0x01
 26a:	8a 81       	ldd	r24, Y+2	; 0x02
 26c:	9b 81       	ldd	r25, Y+3	; 0x03
 26e:	61 15       	cp	r22, r1
 270:	71 05       	cpc	r23, r1
 272:	81 05       	cpc	r24, r1
 274:	91 05       	cpc	r25, r1
 276:	21 f4       	brne	.+8      	; 0x280 <do_rand+0x30>
 278:	64 e2       	ldi	r22, 0x24	; 36
 27a:	79 ed       	ldi	r23, 0xD9	; 217
 27c:	8b e5       	ldi	r24, 0x5B	; 91
 27e:	97 e0       	ldi	r25, 0x07	; 7
 280:	2d e1       	ldi	r18, 0x1D	; 29
 282:	33 ef       	ldi	r19, 0xF3	; 243
 284:	41 e0       	ldi	r20, 0x01	; 1
 286:	50 e0       	ldi	r21, 0x00	; 0
 288:	0e 94 84 01 	call	0x308	; 0x308 <__divmodsi4>
 28c:	49 01       	movw	r8, r18
 28e:	5a 01       	movw	r10, r20
 290:	9b 01       	movw	r18, r22
 292:	ac 01       	movw	r20, r24
 294:	a7 ea       	ldi	r26, 0xA7	; 167
 296:	b1 e4       	ldi	r27, 0x41	; 65
 298:	0e 94 a3 01 	call	0x346	; 0x346 <__muluhisi3>
 29c:	6b 01       	movw	r12, r22
 29e:	7c 01       	movw	r14, r24
 2a0:	ac ee       	ldi	r26, 0xEC	; 236
 2a2:	b4 ef       	ldi	r27, 0xF4	; 244
 2a4:	a5 01       	movw	r20, r10
 2a6:	94 01       	movw	r18, r8
 2a8:	0e 94 b1 01 	call	0x362	; 0x362 <__mulohisi3>
 2ac:	dc 01       	movw	r26, r24
 2ae:	cb 01       	movw	r24, r22
 2b0:	8c 0d       	add	r24, r12
 2b2:	9d 1d       	adc	r25, r13
 2b4:	ae 1d       	adc	r26, r14
 2b6:	bf 1d       	adc	r27, r15
 2b8:	b7 ff       	sbrs	r27, 7
 2ba:	03 c0       	rjmp	.+6      	; 0x2c2 <do_rand+0x72>
 2bc:	01 97       	sbiw	r24, 0x01	; 1
 2be:	a1 09       	sbc	r26, r1
 2c0:	b0 48       	sbci	r27, 0x80	; 128
 2c2:	88 83       	st	Y, r24
 2c4:	99 83       	std	Y+1, r25	; 0x01
 2c6:	aa 83       	std	Y+2, r26	; 0x02
 2c8:	bb 83       	std	Y+3, r27	; 0x03
 2ca:	9f 77       	andi	r25, 0x7F	; 127
 2cc:	df 91       	pop	r29
 2ce:	cf 91       	pop	r28
 2d0:	ff 90       	pop	r15
 2d2:	ef 90       	pop	r14
 2d4:	df 90       	pop	r13
 2d6:	cf 90       	pop	r12
 2d8:	bf 90       	pop	r11
 2da:	af 90       	pop	r10
 2dc:	9f 90       	pop	r9
 2de:	8f 90       	pop	r8
 2e0:	08 95       	ret

000002e2 <rand_r>:
 2e2:	0e 94 28 01 	call	0x250	; 0x250 <do_rand>
 2e6:	08 95       	ret

000002e8 <rand>:
 2e8:	80 e0       	ldi	r24, 0x00	; 0
 2ea:	91 e0       	ldi	r25, 0x01	; 1
 2ec:	0e 94 28 01 	call	0x250	; 0x250 <do_rand>
 2f0:	08 95       	ret

000002f2 <srand>:
 2f2:	a0 e0       	ldi	r26, 0x00	; 0
 2f4:	b0 e0       	ldi	r27, 0x00	; 0
 2f6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 2fa:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2fe:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 302:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 306:	08 95       	ret

00000308 <__divmodsi4>:
 308:	05 2e       	mov	r0, r21
 30a:	97 fb       	bst	r25, 7
 30c:	1e f4       	brtc	.+6      	; 0x314 <__divmodsi4+0xc>
 30e:	00 94       	com	r0
 310:	0e 94 9b 01 	call	0x336	; 0x336 <__negsi2>
 314:	57 fd       	sbrc	r21, 7
 316:	07 d0       	rcall	.+14     	; 0x326 <__divmodsi4_neg2>
 318:	0e 94 b6 01 	call	0x36c	; 0x36c <__udivmodsi4>
 31c:	07 fc       	sbrc	r0, 7
 31e:	03 d0       	rcall	.+6      	; 0x326 <__divmodsi4_neg2>
 320:	4e f4       	brtc	.+18     	; 0x334 <__divmodsi4_exit>
 322:	0c 94 9b 01 	jmp	0x336	; 0x336 <__negsi2>

00000326 <__divmodsi4_neg2>:
 326:	50 95       	com	r21
 328:	40 95       	com	r20
 32a:	30 95       	com	r19
 32c:	21 95       	neg	r18
 32e:	3f 4f       	sbci	r19, 0xFF	; 255
 330:	4f 4f       	sbci	r20, 0xFF	; 255
 332:	5f 4f       	sbci	r21, 0xFF	; 255

00000334 <__divmodsi4_exit>:
 334:	08 95       	ret

00000336 <__negsi2>:
 336:	90 95       	com	r25
 338:	80 95       	com	r24
 33a:	70 95       	com	r23
 33c:	61 95       	neg	r22
 33e:	7f 4f       	sbci	r23, 0xFF	; 255
 340:	8f 4f       	sbci	r24, 0xFF	; 255
 342:	9f 4f       	sbci	r25, 0xFF	; 255
 344:	08 95       	ret

00000346 <__muluhisi3>:
 346:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__umulhisi3>
 34a:	a5 9f       	mul	r26, r21
 34c:	90 0d       	add	r25, r0
 34e:	b4 9f       	mul	r27, r20
 350:	90 0d       	add	r25, r0
 352:	a4 9f       	mul	r26, r20
 354:	80 0d       	add	r24, r0
 356:	91 1d       	adc	r25, r1
 358:	11 24       	eor	r1, r1
 35a:	08 95       	ret

0000035c <__mulshisi3>:
 35c:	b7 ff       	sbrs	r27, 7
 35e:	0c 94 a3 01 	jmp	0x346	; 0x346 <__muluhisi3>

00000362 <__mulohisi3>:
 362:	0e 94 a3 01 	call	0x346	; 0x346 <__muluhisi3>
 366:	82 1b       	sub	r24, r18
 368:	93 0b       	sbc	r25, r19
 36a:	08 95       	ret

0000036c <__udivmodsi4>:
 36c:	a1 e2       	ldi	r26, 0x21	; 33
 36e:	1a 2e       	mov	r1, r26
 370:	aa 1b       	sub	r26, r26
 372:	bb 1b       	sub	r27, r27
 374:	fd 01       	movw	r30, r26
 376:	0d c0       	rjmp	.+26     	; 0x392 <__udivmodsi4_ep>

00000378 <__udivmodsi4_loop>:
 378:	aa 1f       	adc	r26, r26
 37a:	bb 1f       	adc	r27, r27
 37c:	ee 1f       	adc	r30, r30
 37e:	ff 1f       	adc	r31, r31
 380:	a2 17       	cp	r26, r18
 382:	b3 07       	cpc	r27, r19
 384:	e4 07       	cpc	r30, r20
 386:	f5 07       	cpc	r31, r21
 388:	20 f0       	brcs	.+8      	; 0x392 <__udivmodsi4_ep>
 38a:	a2 1b       	sub	r26, r18
 38c:	b3 0b       	sbc	r27, r19
 38e:	e4 0b       	sbc	r30, r20
 390:	f5 0b       	sbc	r31, r21

00000392 <__udivmodsi4_ep>:
 392:	66 1f       	adc	r22, r22
 394:	77 1f       	adc	r23, r23
 396:	88 1f       	adc	r24, r24
 398:	99 1f       	adc	r25, r25
 39a:	1a 94       	dec	r1
 39c:	69 f7       	brne	.-38     	; 0x378 <__udivmodsi4_loop>
 39e:	60 95       	com	r22
 3a0:	70 95       	com	r23
 3a2:	80 95       	com	r24
 3a4:	90 95       	com	r25
 3a6:	9b 01       	movw	r18, r22
 3a8:	ac 01       	movw	r20, r24
 3aa:	bd 01       	movw	r22, r26
 3ac:	cf 01       	movw	r24, r30
 3ae:	08 95       	ret

000003b0 <__umulhisi3>:
 3b0:	a2 9f       	mul	r26, r18
 3b2:	b0 01       	movw	r22, r0
 3b4:	b3 9f       	mul	r27, r19
 3b6:	c0 01       	movw	r24, r0
 3b8:	a3 9f       	mul	r26, r19
 3ba:	70 0d       	add	r23, r0
 3bc:	81 1d       	adc	r24, r1
 3be:	11 24       	eor	r1, r1
 3c0:	91 1d       	adc	r25, r1
 3c2:	b2 9f       	mul	r27, r18
 3c4:	70 0d       	add	r23, r0
 3c6:	81 1d       	adc	r24, r1
 3c8:	11 24       	eor	r1, r1
 3ca:	91 1d       	adc	r25, r1
 3cc:	08 95       	ret

000003ce <_exit>:
 3ce:	f8 94       	cli

000003d0 <__stop_program>:
 3d0:	ff cf       	rjmp	.-2      	; 0x3d0 <__stop_program>
